buildscript {
    // repositories {
    //     maven {
    //         url "https://plugins.gradle.org/m2/" // 플러그인의 저장소
    //     }
    // }
	dependencies {
		classpath("gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:1.0.10") // 플러그인 디펜던시
	}
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.1.9.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}
// apply plugin: "com.ewerk.gradle.plugins.querydsl"   // 외부 플러그인 적용

group = 'jpabook'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6' // sql logging package
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation("org.junit.vintage:junit-vintage-engine") { // JUnit4
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
    implementation 'javax.validation:validation-api:2.0.1.Final' // validator package

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Data
    // implementation 'mysql:mysql-connector-java'
    runtimeOnly 'com.h2database:h2'
    
    // implementation 'com.querydsl:querydsl-core' // QueryDSL library
    implementation 'com.querydsl:querydsl-jpa' // QueryDSL JPA library
    implementation 'com.querydsl:querydsl-apt' // QueryDSL JPA library
    // QueryDSL 관련된 쿼리 타입(QClass)을 생성할 때 필요한 라이브러리로, annotationProcessor을 사용하여 추가
    // annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa")
    // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 시 추가
    // annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
    // java.lang.NoClassDefFoundError(javax.annotation.Generated) 발생 시 추가
    // annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가
// def querydslDir = 'src/main/generated'
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	library = "com.querydsl:querydsl-apt"
	jpa = true
	querydslSourcesDir = querydslDir
}

sourceSets {
    main.java.srcDirs += [querydslDir, "src/main/java"]
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

// /*
// lombok을 사용한 다면 해당 옵션을 넣어줘야 compile시에 cannot find symbol 에러가 발생하지 않는다!!
// https://kangwoojin.github.io/programing/query-dsl-setting/
// */
// project.afterEvaluate {
//     project.tasks.compileQuerydsl.options.compilerArgs = [
//             "-proc:only",
//             "-processor", project.querydsl.processors() +
//                     ',lombok.launch.AnnotationProcessorHider$AnnotationProcessor'
//     ]
// }